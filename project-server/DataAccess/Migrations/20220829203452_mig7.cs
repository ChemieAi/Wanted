using System;
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace DataAccess.Migrations
{
    public partial class mig7 : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "UserId",
                keyValue: 1,
                columns: new[] { "LastName", "PasswordHash", "PasswordSalt", "Status" },
                values: new object[] { "Admin", new byte[] { 251, 214, 0, 17, 232, 203, 206, 119, 214, 37, 109, 11, 159, 84, 13, 169, 70, 255, 55, 14, 195, 93, 254, 15, 189, 188, 84, 214, 149, 129, 91, 194, 33, 92, 245, 80, 120, 126, 230, 132, 17, 6, 141, 205, 97, 196, 167, 118, 215, 61, 162, 178, 118, 177, 163, 247, 207, 244, 158, 14, 62, 103, 60, 105 }, new byte[] { 134, 95, 76, 130, 233, 186, 51, 105, 86, 182, 225, 22, 145, 186, 209, 115, 201, 128, 2, 44, 181, 146, 74, 208, 228, 129, 155, 40, 56, 193, 87, 240, 218, 192, 130, 8, 14, 197, 220, 182, 144, 207, 110, 58, 210, 86, 216, 212, 127, 176, 13, 121, 152, 161, 239, 194, 125, 120, 56, 237, 119, 141, 152, 247, 3, 31, 96, 222, 68, 111, 117, 78, 95, 174, 168, 54, 102, 197, 72, 135, 57, 148, 87, 35, 162, 112, 74, 101, 86, 156, 187, 102, 105, 20, 112, 149, 9, 12, 35, 176, 208, 135, 226, 134, 172, 203, 32, 66, 60, 139, 135, 89, 59, 221, 150, 56, 141, 165, 0, 249, 70, 95, 185, 139, 24, 138, 55, 23 }, true });
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
            migrationBuilder.UpdateData(
                table: "Users",
                keyColumn: "UserId",
                keyValue: 1,
                columns: new[] { "LastName", "PasswordHash", "PasswordSalt", "Status" },
                values: new object[] { "AdminLastName", new byte[] { 250, 132, 234, 135, 254, 28, 88, 100, 164, 56, 85, 171, 9, 129, 139, 47, 58, 51, 184, 98, 142, 220, 242, 155, 201, 31, 123, 101, 103, 36, 78, 46, 109, 199, 130, 107, 206, 75, 160, 236, 116, 207, 184, 93, 61, 222, 78, 160, 26, 189, 8, 140, 121, 124, 173, 233, 131, 184, 241, 60, 247, 32, 90, 109 }, new byte[] { 128, 79, 133, 175, 102, 193, 200, 242, 192, 50, 178, 149, 41, 67, 171, 181, 97, 36, 144, 9, 250, 49, 178, 108, 160, 185, 229, 58, 212, 138, 23, 101, 222, 171, 130, 117, 10, 67, 245, 77, 6, 225, 47, 124, 215, 237, 13, 7, 194, 12, 210, 95, 158, 122, 102, 108, 230, 149, 38, 208, 89, 120, 244, 1, 153, 26, 163, 58, 186, 243, 241, 137, 180, 121, 243, 96, 243, 1, 178, 75, 57, 232, 220, 216, 113, 190, 96, 116, 69, 23, 191, 216, 211, 141, 157, 35, 33, 130, 106, 181, 247, 28, 94, 99, 186, 27, 141, 26, 170, 30, 103, 25, 74, 139, 248, 7, 205, 39, 99, 244, 216, 174, 211, 86, 250, 31, 138, 127 }, false });
        }
    }
}
